// <auto-generated />
using System;
using AutoBackend.Sdk.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations.SqlServer
{
    [DbContext(typeof(SqlServerGenericDbContext))]
    [Migration("20230329090306_ef_hidden_key_for_keyless_entities")]
    partial class ef_hidden_key_for_keyless_entities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api.Data.Album", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Artist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Album", "generic");
                });

            modelBuilder.Entity("Api.Data.AlbumContent", b =>
                {
                    b.Property<Guid>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SongId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AlbumId", "SongId");

                    b.HasIndex("SongId");

                    b.ToTable("AlbumContent", "generic");
                });

            modelBuilder.Entity("Api.Data.AlbumSet", b =>
                {
                    b.Property<Guid>("Album1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Album2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Album3Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Album4Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Album5Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Album6Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Album7Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Album8Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Album1Id", "Album2Id", "Album3Id", "Album4Id", "Album5Id", "Album6Id", "Album7Id", "Album8Id");

                    b.HasIndex("Album2Id");

                    b.HasIndex("Album3Id");

                    b.HasIndex("Album4Id");

                    b.HasIndex("Album5Id");

                    b.HasIndex("Album6Id");

                    b.HasIndex("Album7Id");

                    b.HasIndex("Album8Id");

                    b.ToTable("AlbumSet", "generic");
                });

            modelBuilder.Entity("Api.Data.Note", b =>
                {
                    b.Property<int>("__Generic__Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("__Generic__Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("__Generic__Id");

                    b.ToTable("Note", "generic");
                });

            modelBuilder.Entity("Api.Data.Song", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Song", "generic");
                });

            modelBuilder.Entity("Api.Data.AlbumContent", b =>
                {
                    b.HasOne("Api.Data.Album", "Album")
                        .WithMany()
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Data.Song", "Song")
                        .WithMany()
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("Api.Data.AlbumSet", b =>
                {
                    b.HasOne("Api.Data.Album", "Album1")
                        .WithMany()
                        .HasForeignKey("Album1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Data.Album", "Album2")
                        .WithMany()
                        .HasForeignKey("Album2Id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("Api.Data.Song", "Album3")
                        .WithMany()
                        .HasForeignKey("Album3Id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("Api.Data.Song", "Album4")
                        .WithMany()
                        .HasForeignKey("Album4Id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("Api.Data.Song", "Album5")
                        .WithMany()
                        .HasForeignKey("Album5Id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("Api.Data.Song", "Album6")
                        .WithMany()
                        .HasForeignKey("Album6Id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("Api.Data.Song", "Album7")
                        .WithMany()
                        .HasForeignKey("Album7Id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("Api.Data.Song", "Album8")
                        .WithMany()
                        .HasForeignKey("Album8Id")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Album1");

                    b.Navigation("Album2");

                    b.Navigation("Album3");

                    b.Navigation("Album4");

                    b.Navigation("Album5");

                    b.Navigation("Album6");

                    b.Navigation("Album7");

                    b.Navigation("Album8");
                });
#pragma warning restore 612, 618
        }
    }
}
